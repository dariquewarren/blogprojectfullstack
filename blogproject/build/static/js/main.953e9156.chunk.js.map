{"version":3,"sources":["Firebase.js","Loading.js","App.js","reportWebVitals.js","index.js"],"names":["Dotenv","config","app","initializeApp","apiKey","process","authDomain","databaseURL","storageBucket","messagingSenderId","appId","projectId","auth","getFirestore","getDatabase","getAuth","addSingleArticle","type","author","article","deltab","articleRef","ref","pushRef","push","set","getArticlesByType","a","dbRef","theArticles","get","child","then","snapshot","exists","theData","val","info","id","console","log","catch","error","articleList","getEveryArticle","data","updateArticleByID","updateObject","postListRef","update","deleteArticleByID","remove","signUpUser","email","password","createUserWithEmailAndPassword","errorCode","code","errorMessage","message","signInUser","setPersistence","browserLocalPersistence","signInWithEmailAndPassword","userCredential","window","location","assign","alert","logOut","signOut","reload","updateUserProfile","user","userObject","updateProfile","Loading","style","height","textAlign","fontSize","SearchOptions","lazy","CreateArticle","Header","Homepage","Footer","ViewDrafts","ViewPublished","ReadPublished","SignupForm","LoginForm","UpdateProfile","App","theCurrentAuthor","currentUser","displayName","useState","lightMode","toggleLightMode","categorySelected","setCategorySelected","showSearch","toggleSearch","undefined","searchLocation","setSearchLocation","filterMessage","setFilterMessage","trueArray","setTrueArray","publishedArray","setPublishedArray","draftsArray","setDraftsArray","categoryArray","setCategoryArray","categoryMap","array","changedArray","map","m","category","flat","flatArray","setArray","Set","handlePublishedArray","Promise","resolve","handleDraftsArray","lightModeStyle","backgroundColor","color","darkModeStyle","useEffect","length","fallback","exact","path","element","articleAuthor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.953e9156.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\"\r\nimport { getDatabase, ref, set, child, get, push, remove, update} from \"firebase/database\";\r\nimport { getAuth,browserLocalPersistence,updateProfile , setPersistence, createUserWithEmailAndPassword, signInWithEmailAndPassword , signOut} from \"firebase/auth\";\r\nimport { getFirestore, addDoc, collection } from \"firebase/firestore\";\r\nimport Dotenv from 'dotenv'\r\nDotenv.config()\r\n\r\n// change to use dot env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    \r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\r\n\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst database = getDatabase(app)\r\nconst auth = getAuth();\r\n// const firebaseApp = initializeApp({\r\n//  apiKey: \"AIzaSyB6Swn5ui5X-Z6NKyVU-l-rSWlviiPXZ04\",\r\n//     authDomain: \"blog-project-3d102.firebaseapp.com\",\r\n//   projectId: \"1:772840395218:web:e86b566a2aabe70a6ab80b\"\r\n// });\r\n\r\n\r\n\r\n// Get a reference to the database service\r\n// const database = getDatabase();\r\n//     CRUD\r\n\r\n// Create\r\n\r\n// create instance for creating first entry\r\n// create instance for adding to list of entries\r\n\r\n\r\n export const addSingleArticle = (type, author, article)=>{\r\n   const deltab = getDatabase()\r\n   const articleRef = ref(deltab, `${author}/${type}`)\r\n   const pushRef = push(articleRef)\r\n   set(pushRef, article)\r\n   \r\n \r\n }\r\n// READ\r\n\r\nexport const getArticlesByType = async (author,type)=>{\r\n  const dbRef = ref(getDatabase());\r\n  var theArticles =[]\r\n await get(child(dbRef, `${author}/${type}`)).then((snapshot) => {\r\n  if (snapshot.exists()) {\r\n    var theData = snapshot.val()\r\n    for (const info in theData){\r\n      theArticles.push({\r\n        id:info,\r\n        ...theData[info]\r\n      })\r\n}\r\n  } else {\r\n    console.log(\"No data available\");\r\n  }\r\n}).catch((error) => {\r\n  console.error(error);\r\n});\r\n\r\nconsole.log('theArticles',theArticles )\r\n\r\nconst articleList = theArticles\r\nreturn articleList\r\n}\r\nexport const getEveryArticle = async ()=>{\r\n  const dbRef = ref(getDatabase());\r\n  var theArticles =[]\r\n await get(child(dbRef, '/')).then((snapshot) => {\r\n  if (snapshot.exists()) {\r\n    var theData = snapshot.val()\r\n    console.log('all data', theData)\r\n    for (const info in theData){\r\n      theArticles.push({\r\n        ...theData\r\n      })\r\n      return theArticles\r\n}\r\n  } else {\r\n    console.log(\"No data available\");\r\n  }\r\n}).then((data)=>{\r\n \r\n    \r\n  console.log('data from the articles',data)\r\n}).catch((error) => {\r\n  console.error(error);\r\n});\r\n\r\nconsole.log(`theArticles`,theArticles)\r\n\r\nconst articleList = theArticles\r\nreturn articleList\r\n\r\n}\r\n// UPDATE\r\nexport const updateArticleByID = (type, author, id, updateObject)=>{\r\n  const deltab = getDatabase()\r\n  \r\n  // set(ref(deltab, `${author}/${type}`), article);\r\n  const postListRef = ref(deltab, `${author}/${type}/${id}`)\r\n   update(postListRef,updateObject) \r\n}\r\n// DELETE\r\n\r\nexport const deleteArticleByID = (type,author,id)=>{\r\n  const deltab = getDatabase()\r\n  \r\n  // set(ref(deltab, `${author}/${type}`), article);\r\n  const postListRef = ref(deltab, `${author}/${type}/${id}`)\r\n  remove(postListRef)\r\n}\r\n\r\n\r\n// AUTHENTICATION\r\n\r\n// SIGN UP\r\nexport const signUpUser = async (email, password)=>{\r\n  var trueUser \r\n await createUserWithEmailAndPassword(auth, email, password)\r\n .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // ..\r\n    console.log('errors',{errorMessage,errorCode })\r\n  });\r\nreturn trueUser\r\n\r\n}\r\n// SIGN IN\r\nexport const signInUser =  (email, password)=>{\r\n\r\n   setPersistence(auth, browserLocalPersistence)\r\n  .then(() => {\r\n    // Existing and future Auth states are now persisted in the browserLocal\r\n    // session \r\n    // ...\r\n    \r\n    return signInWithEmailAndPassword(auth,email, password).then((userCredential) => {\r\n      // Signed in \r\n     window.location.assign('/')\r\n      // ...\r\n    })\r\n    .catch((error) => {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      // ..\r\n      alert('error')\r\n      console.log('errors',{errorMessage,errorCode })\r\n    });;\r\n  })\r\n  \r\n\r\n  \r\n  \r\n}\r\n// SIGN OUT /LOGOUT\r\nexport const logOut = ()=>{\r\n\r\nsignOut(auth).then(() => {\r\n  // Sign-out successful.\r\n  alert('signed out')\r\n  window.location.reload()\r\n}).catch((error) => {\r\n  // An error happened.\r\n  alert(`error: ${error}`)\r\n});\r\n\r\n}\r\n// CREATE PROFILE\r\n//UPDATE PROFILE\r\nexport const updateUserProfile =(user,userObject)=>{\r\n  if(!user){\r\nreturn alert('please sign in first to update')\r\n  }else{\r\n    updateProfile(user, userObject)\r\n\r\n  }\r\n}\r\n// ACCESS PROFILE\r\n// DELETE PROFILE\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  CREATE\r\n//         //NOTE: OVERRIDES DATA AT THE LOCATION. create doc WITHOUT DB GENERATED USERID. userid here is replaced by the author parameter & value\r\n// export const writeUserData = async (type, author, articleObject) =>{\r\n//     await FirebaseDB.set(FirebaseDB.ref(db, author +'/' + type), articleObject);\r\n//     }\r\n\r\n//     // create doc WITH DB GENERATED USERID (PREFERRED)\r\n// // Add a new document with a generated id.\r\n// export  const addNewArticle =(type, author, data)=>{\r\n//     const articleListRef = FirebaseDB.ref(db,author + '/' + type);\r\n//     const newArticleRef = FirebaseDB.push(articleListRef);\r\n//     FirebaseDB.set(newArticleRef, data);\r\n//  }\r\n// // READ\r\n// // read from and LISTEN frm database\r\n// export const getArticlesByType = (type, author)=>{\r\n  \r\n//  console.log('get articles by typr', type, author)\r\n  \r\n\r\n\r\n// }\r\n// // UPDATE\r\n// export const updatePublishedArticle =(id, type, author, updateObject)=>{\r\n//     FirebaseDB.set(FirebaseDB.ref(db, author + '/' + type + id), updateObject)\r\n//       .then(() => {\r\n//         // Data saved successfully!\r\n//         console.log('update successfull')\r\n//       })\r\n//       .catch((error) => {\r\n//         // The write failed...\r\n//         console.log('no update', error)\r\n//       });\r\n// }\r\n\r\n// //DELETE\r\n// //The simplest way to delete data is to call remove() on a reference to the location of that data.\r\n// // You can also delete by specifying null as the value for another write operation such as set() or update(). \r\n// //You can use this technique with update() to delete multiple children in a single API call.\r\n\r\n// export const deleteArticle =(type, author, id)  =>{\r\n//     const draftsRefSingle = FirebaseDB.ref(db, author + '/' + type + id);\r\n//     const draftsRefAll = FirebaseDB.ref(db, author + '/' + type);\r\n// // this sillbe needed last-ish\r\n\r\n//     if(id.length){\r\n//         draftsRefSingle.remove()\r\n//         console.log('removed single doc:', id)\r\n//     }else{\r\n//         draftsRefAll.remove()\r\n//         console.log('removed all docs at path: /', `${author} + '/' + ${type}`)\r\n\r\n//     }\r\n\r\n// }\r\n\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/esm/Container'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div>\r\n        <Container style={{height:'30rem', textAlign:'center', fontSize:'5rem'}}>\r\n            Getting your data ...\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, {useState, useEffect, lazy, Suspense} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter , Routes as Switch, Route} from 'react-router-dom'\r\nimport Loading from './Loading';\r\n\r\nimport { getArticlesByType} from './Firebase'\r\nimport { getAuth, browserLocalPersistence,setPersistence, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst auth = getAuth();\r\n\r\nconst SearchOptions = lazy(()=>import('./SearchOptions'))\r\n\r\nconst CreateArticle = lazy(()=>import('./CreateArticle'))\r\nconst Header = lazy(()=>import('./Header'))\r\nconst Homepage = lazy(()=>import('./Homepage'))\r\nconst Footer = lazy(()=>import('./Footer'))\r\nconst ViewDrafts = lazy(()=>import('./ViewDrafts'))\r\nconst ViewPublished = lazy(()=>import('./ViewPublished'))\r\nconst ReadPublished = lazy(()=>import('./ReadPublished'))\r\nconst SignupForm = lazy(()=>import('./authComponents/SignupForm'))\r\nconst LoginForm = lazy(()=>import('./authComponents/LoginForm'))\r\nconst UpdateProfile = lazy(()=>import('./authComponents/UpdateProfile'))\r\n\r\nfunction App() {\r\n\r\n  var theCurrentAuthor =  (auth.currentUser) ?auth.currentUser.displayName : 'ANONYMOUS'\r\n  const [lightMode, toggleLightMode] = useState(false)\r\n\r\n  const [categorySelected, setCategorySelected] = useState(false)\r\n  const [showSearch, toggleSearch] = useState(false)\r\n  const [searchLocation, setSearchLocation] = useState(undefined)\r\n  const [filterMessage, setFilterMessage] = useState('')\r\n  const [trueArray, setTrueArray] = useState([])\r\n  const [publishedArray, setPublishedArray] = useState([])\r\n  const [draftsArray, setDraftsArray] = useState([])\r\n  const [categoryArray, setCategoryArray] = useState([])\r\n\r\n \r\n\r\nconst categoryMap = async(array)=>{\r\n  \r\n  const changedArray = array.map((m)=>{\r\n      return m.category\r\n  })\r\n  const flatArray = await changedArray.flat()\r\n  const setArray =  [...new Set(flatArray)]\r\n  console.log(`flatArray`, flatArray)\r\n  console.log(`setArray`, setArray)\r\n  console.log(`changedArray`, changedArray)\r\n  \r\n  setCategoryArray(setArray)\r\n  }\r\n  const handlePublishedArray = async ()=>{\r\n    await Promise.resolve(getArticlesByType(`${theCurrentAuthor}`, 'published')).then((data)=>{\r\n          setPublishedArray(data)\r\n          setTrueArray(data)\r\n      categoryMap(data)\r\n\r\n          })\r\n  }\r\nconst handleDraftsArray = async ()=>{\r\n  await Promise.resolve(getArticlesByType(`${theCurrentAuthor}`, 'drafts')).then((data)=>{\r\n    setDraftsArray(data)\r\n    console.log('drafts array', data)\r\n    })\r\n}\r\n  const lightModeStyle = {backgroundColor:\"#212121\", color: 'whitesmoke'}\r\n  const darkModeStyle = {backgroundColor:\"whitesmoke\", color: '#212121'}\r\n\r\n  useEffect(()=>{\r\n   if(trueArray.length < 1){\r\n    handlePublishedArray()\r\n    handleDraftsArray()\r\n    console.log('currentUser', auth.currentUser)\r\n   }else{\r\n    console.log('true array already exists')\r\n    console.log('currentUser', auth.currentUser)\r\n\r\n    return \r\n   }\r\n  }, [ trueArray.length, auth.currentUser])\r\n  \r\n  return (\r\n    <div style={(lightMode)? lightModeStyle : darkModeStyle }>\r\n  <Suspense fallback={<Loading/>} >\r\n\r\n    <BrowserRouter  >\r\n\r\n    <Header author={theCurrentAuthor} showSearch={showSearch} toggleSearch={toggleSearch}\r\n    toggleLightMode={toggleLightMode} lightMode={lightMode}\r\n    lightModeStyle={lightModeStyle} darkModeStyle={darkModeStyle}\r\n    searchLocation={searchLocation} setSearchLocation={setSearchLocation} filterMessage={filterMessage} setFilterMessage={setFilterMessage}\r\n    setCategorySelected={setCategorySelected} trueArray={trueArray} setPublishedArray={setPublishedArray} categoryArray={categoryArray} />\r\n   \r\n   \r\n    <Switch  >\r\n\r\n    <Route exact path='/' element={<Homepage \r\n      searchLocation={searchLocation} setSearchLocation={setSearchLocation} filterMessage={filterMessage} setFilterMessage={setFilterMessage}\r\n      categorySelected={categorySelected} setCategorySelected={setCategorySelected} \r\n    publishedArray={publishedArray} showSearch={showSearch} \r\n    toggleSearch={toggleSearch} categoryArray={categoryArray} setCategoryArray={setCategoryArray}\r\n    trueArray={trueArray} author={theCurrentAuthor} />}/>\r\n    \r\n    <Route exact path='/homepage' element={<Homepage \r\n      searchLocation={searchLocation} setSearchLocation={setSearchLocation} filterMessage={filterMessage} setFilterMessage={setFilterMessage}\r\n      trueArray={trueArray} author={theCurrentAuthor} showSearch={showSearch} toggleSearch={toggleSearch} />}/>\r\n    \r\n\r\n    <Route exact path='/updateProfile' element={<UpdateProfile user={auth.currentUser} />}/>\r\n\r\n    <Route exact path='/all/drafts' element={<ViewDrafts   \r\n          articleAuthor={theCurrentAuthor}    trueArray={trueArray}\r\n    setTrueArray={setTrueArray}    draftsArray={draftsArray}\r\n    setDraftsArray={setDraftsArray}/>}/>\r\n    \r\n  \r\n\r\n    <Route exact path='/read/published/:id' \r\n    element={<ReadPublished publishedArray={publishedArray} articleAuthor={theCurrentAuthor}/>}/>\r\n  \r\n  \r\n    <Route exact path='/signup' \r\n    element={<SignupForm  />}/>\r\n    <Route exact path='/login' \r\n    element={<LoginForm   />}/>\r\n    <Route exact path='/search' element={<SearchOptions array={publishedArray} />}/>\r\n    <Route exact path='/write' element={<CreateArticle articleAuthor={theCurrentAuthor} />}/>\r\n\r\n\r\n    <Route exact path='/all/published' element= {<ViewPublished \r\n      articleAuthor={theCurrentAuthor}    trueArray={trueArray}\r\n    setTrueArray={setTrueArray}    publishedArray={publishedArray}\r\n    setPublishedArray={setPublishedArray}    />}\r\n    />\r\n    </Switch>\r\n\r\n    <Footer/>\r\n    </BrowserRouter>\r\n    </Suspense>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}