{"version":3,"sources":["Firebase.js","Loading.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","projectId","auth","getFirestore","getDatabase","getAuth","addSingleArticle","type","author","article","deltab","articleRef","ref","pushRef","push","set","getArticlesByType","a","dbRef","theArticles","get","child","then","snapshot","exists","theData","val","info","id","console","log","catch","error","articleList","updateArticleByID","updateObject","postListRef","update","deleteArticleByID","remove","signUpUser","email","password","createUserWithEmailAndPassword","userCredential","user","trueUser","errorCode","code","errorMessage","message","signInUser","signInWithEmailAndPassword","realUser","Loading","style","height","textAlign","fontSize","CreateArticle","lazy","Header","Homepage","Footer","ViewDrafts","ViewPublished","ReadPublished","SignupForm","LoginForm","App","useState","lightMode","toggleLightMode","articleAuthor","categorySelected","setCategorySelected","showSearch","toggleSearch","undefined","searchLocation","setSearchLocation","filterMessage","setFilterMessage","trueArray","setTrueArray","publishedArray","setPublishedArray","draftsArray","setDraftsArray","categoryArray","setCategoryArray","appUser","setAppUser","categoryMap","array","changedArray","map","m","category","flat","flatArray","setArray","Set","handlePublishedArray","Promise","resolve","data","handleDraftsArray","lightModeStyle","backgroundColor","color","darkModeStyle","useEffect","length","fallback","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e638f940.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\"\r\nimport { getDatabase, ref, set, child, get, push, remove, update} from \"firebase/database\";\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { getFirestore, addDoc, collection } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB6Swn5ui5X-Z6NKyVU-l-rSWlviiPXZ04\",\r\n    authDomain: \"blog-project-3d102.firebaseapp.com\",\r\n    // For databases not in the us-central1 location, databaseURL will be of the\r\n  // form https://[databaseName].[region].firebasedatabase.app.\r\n  // For example, https://your-database-123.europe-west1.firebasedatabase.app\r\n  databaseURL: \"https://blog-project-3d102-default-rtdb.firebaseio.com/\",\r\n  storageBucket: \"blog-project-3d102.appspot.com\",\r\n  messagingSenderId: \"772840395218\",\r\n  appId: \"1:772840395218:web:e86b566a2aabe70a6ab80b\",\r\n  projectId: \"1:772840395218:web:e86b566a2aabe70a6ab80b\"\r\n\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst database = getDatabase(app)\r\nconst auth = getAuth();\r\n// const firebaseApp = initializeApp({\r\n//  apiKey: \"AIzaSyB6Swn5ui5X-Z6NKyVU-l-rSWlviiPXZ04\",\r\n//     authDomain: \"blog-project-3d102.firebaseapp.com\",\r\n//   projectId: \"1:772840395218:web:e86b566a2aabe70a6ab80b\"\r\n// });\r\n\r\n\r\n\r\n// Get a reference to the database service\r\n// const database = getDatabase();\r\n//     CRUD\r\n\r\n// Create\r\n\r\n// create instance for creating first entry\r\n// create instance for adding to list of entries\r\nexport const addArticle = (type, author, article)=>{\r\n  const deltab = getDatabase()\r\n  \r\n  set(ref(`${author}/${type}`), {...article});\r\n  // const postListRef = ref(deltab, `${author}/${type}`)\r\n  // const newPostRef = push(postListRef);\r\n  // set(newPostRef, {type, ...article});\r\n   \r\n  console.log(article)\r\n \r\n }\r\n\r\n export const addSingleArticle = (type, author, article)=>{\r\n   const deltab = getDatabase()\r\n   const articleRef = ref(deltab, `${author}/${type}`)\r\n   const pushRef = push(articleRef)\r\n   set(pushRef, article)\r\n   \r\n \r\n }\r\n// READ\r\n\r\nexport const getArticlesByType = async (author,type)=>{\r\n  const dbRef = ref(getDatabase());\r\n  var theArticles =[]\r\nawait get(child(dbRef, `${author}/${type}`)).then((snapshot) => {\r\n  if (snapshot.exists()) {\r\n    var theData = snapshot.val()\r\n    for (const info in theData){\r\n      theArticles.push({\r\n        id:info,\r\n        ...theData[info]\r\n      })\r\n}\r\n  } else {\r\n    console.log(\"No data available\");\r\n  }\r\n}).catch((error) => {\r\n  console.error(error);\r\n});\r\n\r\nconsole.log('theArticles',theArticles )\r\n\r\nconst articleList = await theArticles\r\nreturn articleList\r\n}\r\n\r\n// UPDATE\r\nexport const updateArticleByID = (type, author, id, updateObject)=>{\r\n  const deltab = getDatabase()\r\n  \r\n  // set(ref(deltab, `${author}/${type}`), article);\r\n  const postListRef = ref(deltab, `${author}/${type}/${id}`)\r\n   update(postListRef,updateObject) \r\n}\r\n// DELETE\r\n\r\nexport const deleteArticleByID = (type,author,id)=>{\r\n  const deltab = getDatabase()\r\n  \r\n  // set(ref(deltab, `${author}/${type}`), article);\r\n  const postListRef = ref(deltab, `${author}/${type}/${id}`)\r\n  remove(postListRef)\r\n}\r\n\r\n\r\n// AUTHENTICATION\r\n\r\n// SIGN UP\r\nexport const signUpUser = async (email, password)=>{\r\n  var trueUser \r\n await createUserWithEmailAndPassword(auth, email, password)\r\n  .then((userCredential) => {\r\n    // Signed in \r\n    const user = userCredential.user;\r\n    console.log('signed in user', user)\r\n    trueUser = userCredential.user;\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // ..\r\n    console.log('errors',{errorMessage,errorCode })\r\n  });\r\nreturn trueUser\r\n\r\n}\r\n// SIGN IN\r\nexport const signInUser = async (email, password)=>{\r\n  var realUser \r\n  await signInWithEmailAndPassword(auth, email, password)\r\n   .then((userCredential) => {\r\n     // Signed in \r\n     const user = userCredential.user;\r\n     console.log('signed in user', user)\r\n     realUser = userCredential.user;\r\n     // ...\r\n   })\r\n   .catch((error) => {\r\n     const errorCode = error.code;\r\n     const errorMessage = error.message;\r\n     // ..\r\n     console.log('errors',{errorMessage,errorCode })\r\n   });\r\n return realUser\r\n}\r\n// SIGN OUT /LOGOUT\r\nexport const signOutUser = ()=>{\r\n  \r\n}\r\n// CREATE PROFILE\r\n//UPDATE PROFILE\r\n// ACCESS PROFILE\r\n// DELETE PROFILE\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  CREATE\r\n//         //NOTE: OVERRIDES DATA AT THE LOCATION. create doc WITHOUT DB GENERATED USERID. userid here is replaced by the author parameter & value\r\n// export const writeUserData = async (type, author, articleObject) =>{\r\n//     await FirebaseDB.set(FirebaseDB.ref(db, author +'/' + type), articleObject);\r\n//     }\r\n\r\n//     // create doc WITH DB GENERATED USERID (PREFERRED)\r\n// // Add a new document with a generated id.\r\n// export  const addNewArticle =(type, author, data)=>{\r\n//     const articleListRef = FirebaseDB.ref(db,author + '/' + type);\r\n//     const newArticleRef = FirebaseDB.push(articleListRef);\r\n//     FirebaseDB.set(newArticleRef, data);\r\n//  }\r\n// // READ\r\n// // read from and LISTEN frm database\r\n// export const getArticlesByType = (type, author)=>{\r\n  \r\n//  console.log('get articles by typr', type, author)\r\n  \r\n\r\n\r\n// }\r\n// // UPDATE\r\n// export const updatePublishedArticle =(id, type, author, updateObject)=>{\r\n//     FirebaseDB.set(FirebaseDB.ref(db, author + '/' + type + id), updateObject)\r\n//       .then(() => {\r\n//         // Data saved successfully!\r\n//         console.log('update successfull')\r\n//       })\r\n//       .catch((error) => {\r\n//         // The write failed...\r\n//         console.log('no update', error)\r\n//       });\r\n// }\r\n\r\n// //DELETE\r\n// //The simplest way to delete data is to call remove() on a reference to the location of that data.\r\n// // You can also delete by specifying null as the value for another write operation such as set() or update(). \r\n// //You can use this technique with update() to delete multiple children in a single API call.\r\n\r\n// export const deleteArticle =(type, author, id)  =>{\r\n//     const draftsRefSingle = FirebaseDB.ref(db, author + '/' + type + id);\r\n//     const draftsRefAll = FirebaseDB.ref(db, author + '/' + type);\r\n// // this sillbe needed last-ish\r\n\r\n//     if(id.length){\r\n//         draftsRefSingle.remove()\r\n//         console.log('removed single doc:', id)\r\n//     }else{\r\n//         draftsRefAll.remove()\r\n//         console.log('removed all docs at path: /', `${author} + '/' + ${type}`)\r\n\r\n//     }\r\n\r\n// }\r\n\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/esm/Container'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div>\r\n        <Container style={{height:'30rem', textAlign:'center', fontSize:'5rem'}}>\r\n            Getting your data ...\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, {useState, useEffect, lazy, Suspense} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter , Routes as Switch, Route} from 'react-router-dom'\r\nimport Loading from './Loading';\r\nimport {addArticle, getArticlesByType} from './Firebase'\r\n\r\nconst CreateArticle = lazy(()=>import('./CreateArticle'))\r\nconst Header = lazy(()=>import('./Header'))\r\nconst Homepage = lazy(()=>import('./Homepage'))\r\nconst Footer = lazy(()=>import('./Footer'))\r\nconst ViewDrafts = lazy(()=>import('./ViewDrafts'))\r\nconst ViewPublished = lazy(()=>import('./ViewPublished'))\r\nconst ReadPublished = lazy(()=>import('./ReadPublished'))\r\nconst SignupForm = lazy(()=>import('./authComponents/SignupForm'))\r\nconst LoginForm = lazy(()=>import('./authComponents/LoginForm'))\r\n\r\n\r\nfunction App() {\r\n  const [lightMode, toggleLightMode] = useState(false)\r\n\r\n  const [articleAuthor, setAuthor] = useState('Darique Tester')\r\n  const [categorySelected, setCategorySelected] = useState(false)\r\n  const [showSearch, toggleSearch] = useState(false)\r\n  const [searchLocation, setSearchLocation] = useState(undefined)\r\n  const [filterMessage, setFilterMessage] = useState('')\r\n  const [trueArray, setTrueArray] = useState([])\r\n  const [publishedArray, setPublishedArray] = useState([])\r\n  const [draftsArray, setDraftsArray] = useState([])\r\n  const [categoryArray, setCategoryArray] = useState([])\r\n  const [appUser, setAppUser] = useState(undefined)\r\n\r\n  \r\n  \r\n\r\nconst categoryMap = async(array)=>{\r\n  \r\n  const changedArray = array.map((m)=>{\r\n      return m.category\r\n  })\r\n  const flatArray = await changedArray.flat()\r\n  const setArray =  [...new Set(flatArray)]\r\n  console.log(`flatArray`, flatArray)\r\n  console.log(`setArray`, setArray)\r\n  console.log(`changedArray`, changedArray)\r\n  \r\n  setCategoryArray(setArray)\r\n  }\r\n  const handlePublishedArray = async ()=>{\r\n    await Promise.resolve(getArticlesByType('Darique Tester', 'published')).then((data)=>{\r\n          setPublishedArray(data)\r\n          setTrueArray(data)\r\n      categoryMap(data)\r\n\r\n          })\r\n  }\r\nconst handleDraftsArray = async ()=>{\r\n  await Promise.resolve(getArticlesByType('Darique Tester', 'drafts')).then((data)=>{\r\n    setDraftsArray(data)\r\n    \r\n    })\r\n}\r\n  const lightModeStyle = {backgroundColor:\"#212121\", color: 'whitesmoke'}\r\n  const darkModeStyle = {backgroundColor:\"whitesmoke\", color: '#212121'}\r\n\r\n  useEffect(()=>{\r\n   if(trueArray.length < 1){\r\n    handlePublishedArray()\r\n    handleDraftsArray()\r\n    \r\n   }else{\r\n    console.log('true array already exists')\r\n\r\n    return \r\n   }\r\n  }, [ trueArray.length])\r\n  \r\n  return (\r\n    <div style={(lightMode)? lightModeStyle : darkModeStyle }>\r\n  <Suspense fallback={<Loading/>} >\r\n\r\n    <BrowserRouter  >\r\n{(appUser)?appUser.email: 'nothing email'}\r\n    <Header showSearch={showSearch} toggleSearch={toggleSearch}\r\n    toggleLightMode={toggleLightMode} lightMode={lightMode}\r\n    lightModeStyle={lightModeStyle} darkModeStyle={darkModeStyle}\r\n    searchLocation={searchLocation} setSearchLocation={setSearchLocation} filterMessage={filterMessage} setFilterMessage={setFilterMessage}\r\n    setCategorySelected={setCategorySelected} trueArray={trueArray} setPublishedArray={setPublishedArray} categoryArray={categoryArray} />\r\n   \r\n   \r\n    <Switch  >\r\n\r\n    <Route exact path='/' element={<Homepage \r\n      searchLocation={searchLocation} setSearchLocation={setSearchLocation} filterMessage={filterMessage} setFilterMessage={setFilterMessage}\r\n      categorySelected={categorySelected} setCategorySelected={setCategorySelected} \r\n    publishedArray={publishedArray} showSearch={showSearch} \r\n    toggleSearch={toggleSearch} categoryArray={categoryArray} setCategoryArray={setCategoryArray}\r\n    trueArray={trueArray} author={articleAuthor} />}/>\r\n\r\n    <Route exact path='/write' element={<CreateArticle articleAuthor={articleAuthor} />}/>\r\n    \r\n    <Route exact path='/all/drafts' element={<ViewDrafts   \r\n          articleAuthor={articleAuthor}    trueArray={trueArray}\r\n    setTrueArray={setTrueArray}    draftsArray={draftsArray}\r\n    setDraftsArray={setDraftsArray}/>}/>\r\n    \r\n    <Route exact path='/homepage' element={<Homepage \r\n      searchLocation={searchLocation} setSearchLocation={setSearchLocation} filterMessage={filterMessage} setFilterMessage={setFilterMessage}\r\n      trueArray={trueArray} author={articleAuthor} showSearch={showSearch} toggleSearch={toggleSearch} />}/>\r\n    \r\n    <Route exact path='/all/published' element= {<ViewPublished \r\n      articleAuthor={articleAuthor}    trueArray={trueArray}\r\n    setTrueArray={setTrueArray}    publishedArray={publishedArray}\r\n    setPublishedArray={setPublishedArray}    />}/>\r\n\r\n    <Route exact path='/read/published/:id' \r\n    element={<ReadPublished publishedArray={publishedArray} articleAuthor={articleAuthor}/>}/>\r\n    <Route exact path='/signup' \r\n    element={<SignupForm setAppUser={setAppUser} />}/>\r\n    <Route exact path='/login' \r\n    element={<LoginForm setAppUser={setAppUser} />}/>\r\n    </Switch>\r\n    <Footer/>\r\n    </BrowserRouter>\r\n    </Suspense>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}