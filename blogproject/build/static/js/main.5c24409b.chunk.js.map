{"version":3,"sources":["Loading.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","style","height","textAlign","fontSize","CreateArticle","lazy","Header","Homepage","Footer","ViewDrafts","ViewPublished","ReadPublished","App","useState","lightMode","toggleLightMode","articleAuthor","categorySelected","setCategorySelected","showSearch","toggleSearch","undefined","searchLocation","setSearchLocation","filterMessage","setFilterMessage","trueArray","setTrueArray","publishedArray","setPublishedArray","draftsArray","setDraftsArray","categoryArray","setCategoryArray","categoryMap","array","a","changedArray","map","m","category","flat","flatArray","setArray","Set","console","log","lightModeStyle","backgroundColor","color","darkModeStyle","useEffect","length","fetch","then","response","json","data","realData","fallback","exact","path","element","author","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c24409b.chunk.js","sourcesContent":["import React from 'react'\r\nimport Container from 'react-bootstrap/esm/Container'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div>\r\n        <Container style={{height:'30rem', textAlign:'center', fontSize:'5rem'}}>\r\n            Getting your data ...\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, {useState, useEffect, lazy, Suspense} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter , Routes as Switch, Route} from 'react-router-dom'\r\nimport Loading from './Loading';\r\nconst CreateArticle = lazy(()=>import('./CreateArticle'))\r\nconst Header = lazy(()=>import('./Header'))\r\nconst Homepage = lazy(()=>import('./Homepage'))\r\nconst Footer = lazy(()=>import('./Footer'))\r\nconst ViewDrafts = lazy(()=>import('./ViewDrafts'))\r\nconst ViewPublished = lazy(()=>import('./ViewPublished'))\r\nconst ReadPublished = lazy(()=>import('./ReadPublished'))\r\n\r\n\r\nfunction App() {\r\n  const [lightMode, toggleLightMode] = useState(false)\r\n\r\n  const [articleAuthor, setAuthor] = useState('Darique Tester')\r\n  const [categorySelected, setCategorySelected] = useState(false)\r\n  const [showSearch, toggleSearch] = useState(false)\r\n  const [searchLocation, setSearchLocation] = useState(undefined)\r\n  const [filterMessage, setFilterMessage] = useState('')\r\n  const [trueArray, setTrueArray] = useState([])\r\n  const [publishedArray, setPublishedArray] = useState([])\r\n  const [draftsArray, setDraftsArray] = useState([])\r\n  const [categoryArray, setCategoryArray] = useState([])\r\n\r\nconst handleDraftsArray = ()=>{\r\n  fetch('/drafts/all').then((response)=>{\r\n    return response.json()\r\n  }).then((data)=>{\r\n    setDraftsArray(data.realData)\r\n    return data.realData\r\n  }).then((data)=>{\r\n    \r\n    console.log('draftsArray', draftsArray)\r\n  })\r\n}\r\n\r\nconst categoryMap = async(array)=>{\r\n  \r\n  const changedArray = array.map((m)=>{\r\n      return m.category\r\n  })\r\n  const flatArray = await changedArray.flat()\r\n  const setArray = [...new Set(flatArray)]\r\n  console.log(`flatArray`, flatArray)\r\n  console.log(`setArray`, setArray)\r\n  console.log(`changedArray`, changedArray)\r\n  \r\n  setCategoryArray(setArray)\r\n  }\r\n\r\n  const lightModeStyle = {backgroundColor:\"#212121\", color: 'whitesmoke'}\r\n  const darkModeStyle = {backgroundColor:\"whitesmoke\", color: '#212121'}\r\n\r\n  useEffect(()=>{\r\n   if(trueArray.length < 1){\r\n    fetch('/published/all').then((response)=>{\r\n      return response.json()\r\n    }).then((data)=>{\r\n      setTrueArray(data.realData)\r\n      setPublishedArray(data.realData)\r\n return data.realData\r\n    }).then((data)=>{\r\n      handleDraftsArray(data)\r\n      categoryMap(data)\r\n    })\r\n   }else{\r\n    console.log('true array already exists')\r\n\r\n    return \r\n   }\r\n  }, [ trueArray.length, draftsArray, publishedArray])\r\n  \r\n  return (\r\n    <div style={(lightMode)? lightModeStyle : darkModeStyle }>\r\n  <Suspense fallback={<Loading/>} >\r\n\r\n    <BrowserRouter  >\r\n\r\n    <Header showSearch={showSearch} toggleSearch={toggleSearch}\r\n    toggleLightMode={toggleLightMode} lightMode={lightMode}\r\n    lightModeStyle={lightModeStyle} darkModeStyle={darkModeStyle}\r\n    searchLocation={searchLocation} setSearchLocation={setSearchLocation} filterMessage={filterMessage} setFilterMessage={setFilterMessage}\r\n    setCategorySelected={setCategorySelected} trueArray={trueArray} setPublishedArray={setPublishedArray} categoryArray={categoryArray} />\r\n   \r\n   \r\n    <Switch  >\r\n\r\n    <Route exact path='/' element={<Homepage \r\n      searchLocation={searchLocation} setSearchLocation={setSearchLocation} filterMessage={filterMessage} setFilterMessage={setFilterMessage}\r\n      categorySelected={categorySelected} setCategorySelected={setCategorySelected} \r\n    publishedArray={publishedArray} showSearch={showSearch} \r\n    toggleSearch={toggleSearch} categoryArray={categoryArray} setCategoryArray={setCategoryArray}\r\n    trueArray={trueArray} author={articleAuthor} />}/>\r\n\r\n    <Route exact path='/write' element={<CreateArticle articleAuthor={articleAuthor} />}/>\r\n    \r\n    <Route exact path='/all/drafts' element={<ViewDrafts   \r\n          articleAuthor={articleAuthor}    trueArray={trueArray}\r\n    setTrueArray={setTrueArray}    draftsArray={draftsArray}\r\n    setDraftsArray={setDraftsArray}/>}/>\r\n    \r\n    <Route exact path='/homepage' element={<Homepage \r\n      searchLocation={searchLocation} setSearchLocation={setSearchLocation} filterMessage={filterMessage} setFilterMessage={setFilterMessage}\r\n      trueArray={trueArray} author={articleAuthor} showSearch={showSearch} toggleSearch={toggleSearch} />}/>\r\n    \r\n    <Route exact path='/all/published' element= {<ViewPublished \r\n      articleAuthor={articleAuthor}    trueArray={trueArray}\r\n    setTrueArray={setTrueArray}    publishedArray={publishedArray}\r\n    setPublishedArray={setPublishedArray}    />}/>\r\n\r\n    <Route exact path='/read/published/:id' \r\n    element={<ReadPublished publishedArray={publishedArray} articleAuthor={articleAuthor}/>}/>\r\n  \r\n    </Switch>\r\n    <Footer/>\r\n    </BrowserRouter>\r\n    </Suspense>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}