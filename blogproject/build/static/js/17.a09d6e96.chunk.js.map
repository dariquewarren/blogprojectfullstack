{"version":3,"sources":["Homepage.js","ArticleCard.js"],"names":["Homepage","props","useState","baseArray","setBaseArray","mappedArray","setMappedArray","tagsArray","setTagsArray","tagsMap","array","a","map","m","tags","changedArray","flat","flatArray","setArray","Set","console","log","useEffect","length","publishedArray","trueArray","categoryArray","onClick","style","display","flexDirection","width","marginTop","className","marginLeft","marginRight","height","cursor","textAlign","borderBottom","marginBottom","categorySelected","articleFrom","id","textDecoration","filterWord","interimArray","trueTagsArray","setCategorySelected","includes","toUpperCase","push","handleTagsFilter","trueCategoryArray","category","handleCategoryFilter","ArticleCard","paddingTop","paddingBottom","backgroundColor","articleType","articleID","type","window","open","Img","src","image","alt","title","substring","subtitle","Text","paddingRight","author","datePublished"],"mappings":"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","file":"static/js/17.a09d6e96.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {BiRefresh} from 'react-icons/bi'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport ArticleCard from './ArticleCard'\r\nimport Loading from './Loading'\r\n\r\nconst Homepage =  (props)=> {\r\nconst [baseArray, setBaseArray] = useState([])\r\nconst [mappedArray, setMappedArray] = useState([])\r\n\r\nconst [tagsArray, setTagsArray] = useState([])\r\n\r\n\r\nconst handleTagsFilter = (filterWord)=>{\r\n// filter array by matches to filterWord\r\nconst interimArray = baseArray\r\nvar trueTagsArray = []\r\n\r\n\r\nif(filterWord){\r\n    interimArray.map((m)=>{\r\n        if(m.tags.includes(filterWord.toUpperCase())){\r\n          return  trueTagsArray.push(m)\r\n        }else{\r\n            return m\r\n        }\r\n    })\r\n    setMappedArray(trueTagsArray)\r\n    props.setCategorySelected(`Viewing Tag: ${filterWord}`)\r\n    console.log('trueTagsArray', trueTagsArray)\r\n}else{\r\n    props.setCategorySelected(`ALL`)\r\n\r\n   return setMappedArray(baseArray)\r\n\r\n}\r\n    \r\n}\r\n\r\n\r\n\r\nconst handleCategoryFilter = (filterWord)=>{\r\n    // grab base arrayy\r\n\r\n    // props.trueArray\r\n    const interimArray = props.trueArray\r\n\r\n// filter array by matches to filterWord\r\nvar trueCategoryArray = []\r\n\r\ninterimArray.map((m)=>{\r\n    if(m.category.includes(filterWord.toUpperCase())){\r\nreturn trueCategoryArray.push(m)\r\n \r\n    }else{\r\n        return m\r\n    }\r\n})\r\n\r\n\r\n\r\n    // set main page array to new Category array\r\n    // props.setPublishedArray\r\n    setMappedArray(trueCategoryArray)\r\n    props.setCategorySelected(`Viewing Category: ${filterWord}`)\r\n\r\n    console.log('trueCategoryArray', trueCategoryArray)\r\n\r\n    // console.log('category filter')\r\n    }\r\n\r\nconst tagsMap =async (array)=>{\r\n    const changedArray = await array.map((m)=>{\r\n        return m.tags\r\n    })\r\n    const flatArray = await changedArray.flat()\r\n    const setArray =  [...new Set(flatArray)]\r\n    console.log(`flatArray`, flatArray)\r\n    console.log(`setArray`, setArray)\r\n    console.log(`changedArray`, changedArray)\r\nsetTagsArray(setArray)\r\n}\r\nuseEffect(()=>{\r\nif(mappedArray.length < 1 || !mappedArray){\r\n    setMappedArray(props.publishedArray)\r\n    setBaseArray(props.trueArray)\r\n    tagsMap(props.publishedArray)\r\n\r\n    console.log('categories',props.categoryArray)\r\n\r\n}else {\r\n   console.log('mapped array', mappedArray)\r\n\r\n    return\r\n}\r\n\r\n}, [props.trueArray,props.categoryArray, props.publishedArray, mappedArray])\r\n\r\n    return (\r\n        <div>\r\n       <button\r\n       onClick={()=>{\r\nconsole.log('test')\r\n       }}\r\n       >Test</button>\r\n        <div style={{display: 'flex', flexDirection:'row', width: '100%', marginTop:'0px' }}>\r\n      \r\n        \r\n       <Nav className='flex-column' style={{marginLeft: 'auto',marginRight:'0px', width: '60%' }}>\r\n       <h4\r\n       >\r\n       <BiRefresh \r\n       style={{height:'3rem',width:'3rem', cursor: 'pointer'}}\r\n       onClick={()=>{\r\n           setMappedArray(baseArray)\r\n       }}/>\r\n       </h4>\r\n\r\n       <h4 \r\n       style={{textAlign:'center' ,borderBottom:'2px solid black',marginBottom:'2rem', marginLeft:'auto',marginRight:'auto', width: '50%'}}>\r\n        {(props.categorySelected && props.categorySelected !=='HOME') ? props.categorySelected : 'All Articles'}\r\n      \r\n        </h4>\r\n\r\n{\r\n    mappedArray.map((m)=>{\r\n    return (\r\n        <ArticleCard articleFrom='homepage' key={m.id} {...m}/>\r\n    )\r\n})\r\n\r\n}\r\n\r\n\r\n\r\n       </Nav>\r\n\r\n       <Nav className='flex-column' style={{ width:'25%', marginLeft: 'auto', marginRight:'auto'}}>\r\n       <h2 className='text-center' style={{textDecoration: 'underline'}}>Tags</h2>\r\n     {(tagsArray.length >0)\r\n        ? \r\n        tagsArray.map((m)=>{\r\n         return(\r\n             <p key={m} style={{cursor:'pointer',textAlign:'right', textDecoration: 'underline'}}\r\n             onClick={()=>{\r\n                handleTagsFilter(m)\r\n             }}\r\n             >{m} </p>\r\n         )\r\n     })\r\n    :\r\n    <Loading/>\r\n    }\r\n    <h2 className='text-center' style={{textDecoration: 'underline'}} >Categories</h2>\r\n    {(props.categoryArray.length > 0) ?props.categoryArray.map((m)=>{\r\n        return(\r\n            <p key={m} style={{cursor:'pointer',textAlign:'right', textDecoration: 'underline'}} \r\n            onClick={()=>{\r\n                handleCategoryFilter(m)\r\n             }}\r\n            >{m}</p>\r\n        )\r\n    })\r\n    :\r\n    (\r\n        <Loading/>\r\n    )\r\n}\r\n        </Nav>\r\n    \r\n       </div>\r\n      \r\n   </div>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nfunction ArticleCard(props) {\r\n\r\n\r\nconst handleCardRedirect=(articleType, articleID) =>{\r\n  if(articleType === 'drafts'){\r\n    window.open(`/read/draft/${articleID}`)\r\n}else if(articleType === 'published'){\r\n    window.open(`/read/published/${articleID}`)\r\n}\r\n  \r\n  \r\n} \r\n    return (\r\n      <Card \r\n      style={{marginBottom:'1.5rem', paddingTop:'.5rem', paddingBottom:'.5rem', backgroundColor:'grey'}}\r\n      onClick={()=>{\r\n       handleCardRedirect(props.type, props.id)\r\n      \r\n   }}\r\n      >\r\n      <Card.Img  style={{height: '10rem', width:'10rem', marginRight:'auto', marginLeft:'auto', marginBottom:'1rem'}}\r\n      src={props.image} alt={`${props.title}`} />\r\n      \r\n      \r\n      <h2 style={{textAlign:'center'}}>{(props.title.length < 35)?props.title.toUpperCase():`${props.title.substring(0, 35).toUpperCase()} ...`} </h2>\r\n      <h5 style={{textAlign:'center'}}>{(props.subtitle.length < 30)?props.subtitle.toUpperCase():`${props.subtitle.substring(0, 30).toUpperCase()} ...`}</h5>\r\n     <Card.Text style={{textAlign:'right', paddingRight:'3px'}}>By {props.author} on {props.datePublished}</Card.Text>\r\n      </Card>\r\n     \r\n    )\r\n}\r\n\r\nexport default ArticleCard\r\n"],"sourceRoot":""}